PROG bigIrTest
FUNC main ()V
{
	TEMP 0:Z;
	TEMP 1:AI;
	TEMP 2:AI;
	TEMP 3:I;
	TEMP 4:I;
	TEMP 5:I;
	TEMP 6:I;
	TEMP 7:U;
	TEMP 8:I;
	TEMP 9:I;
	TEMP 10:U;
	TEMP 11:F;
	TEMP 12:F;
	TEMP 13:U;
	TEMP 14:C;
	TEMP 15:C;
	TEMP 16:U;
	TEMP 17:Z;
	TEMP 18:Z;
	TEMP 19:Z;
	TEMP 20:U;
	TEMP 21:Z;
	TEMP 22:U;
	TEMP 23:Z;
	TEMP 24:Z;
	TEMP 25:U;
	TEMP 26:U;
		T1 := NEWARRAY I 1;
		T2 := NEWARRAY I 1;
		T3 := 0;
		T4 := 1;
		T1[T3] := T4;
		T5 := 0;
		T6 := 2;
		T2[T5] := T6;
		T7 := "int math test should be 15 result: ";
		PRINTU T7;
		T8 := 10;
		T9 := CALL foo(T8);
		PRINTLNI T9;
		T10 := "float math test should be 15.0 result: ";
		PRINTU T10;
		T11 := 10.0;
		T12 := CALL bar(T11);
		PRINTLNF T12;
		T13 := "char test result: ";
		PRINTU T13;
		T14 := 'c';
		T15 := CALL baz(T14);
		PRINTLNC T15;
		T16 := "bool test result: ";
		PRINTU T16;
		T17 := FALSE;
		T18 := CALL qux(T17);
		T0 := T18;
		T19 := Z! T0;
		IF T19 GOTO L0;
		T20 := "booleans are working";
		PRINTLNU T20;
L0:;
		T21 := Z! T0;
		IF T21 GOTO L1;
		GOTO L2;
L1:;
		T22 := "booleans are not working";
		PRINTLNU T22;
L2:;
		T23 := TRUE;
		T24 := Z! T23;
		IF T24 GOTO L3;
		T25 := "if statements are working";
		PRINTLNU T25;
L3:;
		CALL quux();
		T26 := "array as params should be 3 result: ";
		PRINTU T26;
		CALL quo(T1 T2);
		RETURN;
}
FUNC foo (I)I
{
	TEMP 0:I;
	TEMP 1:I;
	TEMP 2:I;
	TEMP 3:I;
	TEMP 4:AI;
	TEMP 5:I;
	TEMP 6:I;
	TEMP 7:I;
	TEMP 8:I;
	TEMP 9:I;
	TEMP 10:I;
	TEMP 11:I;
	TEMP 12:I;
	TEMP 13:I;
		T4 := NEWARRAY I 2;
		T5 := 0;
		T6 := 1;
		T4[T5] := T6;
		T7 := 2;
		T1 := T7;
		T8 := 3;
		T2 := T8;
		T9 := T1 I* T2;
		T10 := T0 I+ T9;
		T11 := 0;
		T12 := T4[T11];
		T13 := T10 I- T12;
		T3 := T13;
		RETURN T3;
		RETURN;
}
FUNC bar (F)F
{
	TEMP 0:F;
	TEMP 1:F;
	TEMP 2:F;
	TEMP 3:F;
	TEMP 4:AF;
	TEMP 5:I;
	TEMP 6:F;
	TEMP 7:F;
	TEMP 8:F;
	TEMP 9:F;
	TEMP 10:F;
	TEMP 11:F;
	TEMP 12:F;
		T4 := NEWARRAY F 2;
		T5 := 0;
		T6 := 1.0;
		T4[T5] := T6;
		T7 := 2.0;
		T1 := T7;
		T8 := 3.0;
		T2 := T8;
		T9 := T1 F* T2;
		T10 := T0 F+ T9;
		T11 := 1.0;
		T12 := T10 F- T11;
		T3 := T12;
		RETURN T3;
		RETURN;
}
FUNC baz (C)C
{
	TEMP 0:C;
	TEMP 1:AC;
	TEMP 2:U;
	TEMP 3:I;
	TEMP 4:C;
	TEMP 5:U;
	TEMP 6:I;
	TEMP 7:C;
		T1 := NEWARRAY C 2;
		T3 := 0;
		T4 := 'g';
		T1[T3] := T4;
		T5 := "hars are workin";
		T2 := T5;
		PRINTC T0;
		PRINTU T2;
		T6 := 0;
		T7 := T1[T6];
		RETURN T7;
		RETURN;
}
FUNC qux (Z)Z
{
	TEMP 0:Z;
	TEMP 1:Z;
	TEMP 2:Z;
	TEMP 3:Z;
	TEMP 4:Z;
	TEMP 5:Z;
	TEMP 6:U;
		T3 := FALSE;
		T2 := T3;
		T4 := TRUE;
		T1 := T4;
		T5 := Z! T0;
		IF T5 GOTO L0;
		T6 := "booleans are not working";
		PRINTLNU T6;
		RETURN T2;
		GOTO L1;
L0:;
		RETURN T1;
L1:;
		RETURN T2;
		RETURN;
}
FUNC quux ()V
{
	TEMP 0:I;
	TEMP 1:U;
	TEMP 2:I;
	TEMP 3:I;
	TEMP 4:Z;
	TEMP 5:Z;
	TEMP 6:I;
	TEMP 7:I;
		T1 := "while test result should be 5 result: ";
		PRINTU T1;
		T2 := 0;
		T0 := T2;
L0:;
		T3 := 5;
		T4 := T0 I< T3;
		T5 := Z! T4;
		IF T5 GOTO L1;
		T6 := 1;
		T7 := T0 I+ T6;
		T0 := T7;
		GOTO L0;
L1:;
		PRINTLNI T0;
		RETURN;
}
FUNC quo (AIAI)V
{
	TEMP 0:AI;
	TEMP 1:AI;
	TEMP 2:I;
	TEMP 3:I;
	TEMP 4:I;
	TEMP 5:I;
	TEMP 6:I;
	TEMP 7:I;
		T3 := 0;
		T4 := T0[T3];
		T5 := 0;
		T6 := T1[T5];
		T7 := T4 I+ T6;
		T2 := T7;
		PRINTLNI T2;
		RETURN;
}